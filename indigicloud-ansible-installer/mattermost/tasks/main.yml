---
- name: Create directories for Mattermost
  file:
    path: "/srv/mattermost/{{ item }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0755"
  with_items:
    - config
    - data
    - logs

- name: Create directories for Mattermost database
  file:
    path: "/srv/mattermost/dbdata"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0755"

- name: Create Docker Compose file for Mattermost
  copy:
    dest: /srv/mattermost/docker-compose.yml
    content: |
      version: '3.8'
      services:
        mattermost_db:
          container_name: mattermost_db
          image: postgres:13
          restart: always
          volumes:
            - /srv/mattermost/dbdata:/var/lib/postgresql/data
          environment:
            POSTGRES_USER: {{ mattermost_db_user }}
            POSTGRES_PASSWORD: {{ mattermost_db_password }}
            POSTGRES_DB: {{ mattermost_db_name }}
          networks:
            - app-suite

        app:
          container_name: mattermost-app
          image: mattermost/mattermost-team-edition:latest
          restart: always
          depends_on:
            - mattermost_db
          ports:
            - "{{ item.port }}:8065"  # Dynamically expose the port from subdomains.yml
          volumes:
            - /srv/mattermost/data:/mattermost/data
          environment:
            MM_SQLSETTINGS_DRIVERNAME: postgres
            MM_SQLSETTINGS_DATASOURCE: postgres://{{ mattermost_db_user }}:{{ mattermost_db_password }}@mattermost_db:5432/{{ mattermost_db_name }}?sslmode=disable
            MM_SERVICESETTINGS_SITEURL: http://{{ item.subdomain }}.{{ cloudflare_domain }}
            VIRTUAL_HOST: {{ item.subdomain }}.{{ cloudflare_domain }}  # Set the subdomain for NGINX proxy
            VIRTUAL_PORT: 8065  # Port inside the Mattermost container
            LETSENCRYPT_HOST: {{ item.subdomain }}.{{ cloudflare_domain }}  # Request a certificate for this subdomain
            LETSENCRYPT_EMAIL: {{ certbot_email }}
          networks:
            - app-suite
      networks:
        app-suite:
          driver: bridge
          external: true
  loop: "{{ subdomains }}"
  when: item.service == "mattermost"

- name: Start Mattermost using Docker Compose
  shell: |
    docker compose up -d
  args:
    chdir: /srv/mattermost
