---
- name: Create directories for Jitsi Meet
  file:
    path: "/srv/jitsi-meet/{{ item }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0755"
  with_items:
    - web
    - prosody
    - jicofo
    - jvb

- name: Create Docker Compose file for Jitsi Meet
  copy:
    dest: /srv/jitsi-meet/docker-compose.yml
    content: |
      version: '3.8'
      services:
        jitsi_web:
          image: jitsi/web:stable
          restart: unless-stopped
          ports:
            - "{{ item.port }}:80"  # Dynamically expose the port from subdomains.yml
          volumes:
            - /srv/jitsi-meet/web:/config
          environment:
            - VIRTUAL_HOST={{ item.subdomain }}.{{ cloudflare_domain }}  # Set the subdomain for NGINX proxy
            - VIRTUAL_PORT=80  # Port inside the Jitsi web container
            - LETSENCRYPT_HOST={{ item.subdomain }}.{{ cloudflare_domain }}  # Request a certificate for this subdomain
            - LETSENCRYPT_EMAIL={{ certbot_email }}
          networks:
            - app-suite

        jitsi_prosody:
          image: jitsi/prosody:stable
          container_name: jitsi_prosody
          restart: unless-stopped
          expose:
            - '5222'
            - '5347'
            - '5280'
          volumes:
            - /srv/jitsi-meet/prosody:/config
          environment:
            - XMPP_DOMAIN=xmpp.{{ item.subdomain }}.{{ cloudflare_domain }}  # XMPP on xmpp.subdomain.cloudflare_domain
            - JICOFO_COMPONENT_SECRET={{ jitsi_jicofo_component_secret }}
            - JICOFO_AUTH_USER=focus
            - JICOFO_AUTH_PASSWORD={{ jitsi_jicofo_auth_password }}
            - JVB_AUTH_USER=jvb
            - JVB_AUTH_PASSWORD={{ jitsi_jvb_auth_password }}
          networks:
            - app-suite

        jitsi_jicofo:
          image: jitsi/jicofo:stable
          container_name: jitsi_jicofo
          restart: unless-stopped
          volumes:
            - /srv/jitsi-meet/jicofo:/config
          environment:
            - JICOFO_COMPONENT_SECRET={{ jitsi_jicofo_component_secret }}
            - JICOFO_AUTH_USER=focus
            - JICOFO_AUTH_PASSWORD={{ jitsi_jicofo_auth_password }}
            - JVB_AUTH_USER=jvb
            - JVB_AUTH_PASSWORD={{ jitsi_jvb_auth_password }}
            - XMPP_DOMAIN=xmpp.{{ item.subdomain }}.{{ cloudflare_domain }}  # XMPP on xmpp.subdomain.cloudflare_domain
            - XMPP_SERVER=xmpp.{{ item.subdomain }}.{{ cloudflare_domain }}  # XMPP server on xmpp.subdomain.cloudflare_domain
          networks:
            - app-suite

        jitsi_jvb:
          image: jitsi/jvb:stable
          container_name: jitsi_jvb
          restart: unless-stopped
          ports:
            - '10000:10000/udp'
            - '4443:4443'
          volumes:
            - /srv/jitsi-meet/jvb:/config
          environment:
            - XMPP_DOMAIN=xmpp.{{ item.subdomain }}.{{ cloudflare_domain }}  # XMPP on xmpp.subdomain.cloudflare_domain
            - JVB_AUTH_USER=jvb
            - JVB_AUTH_PASSWORD={{ jitsi_jvb_auth_password }}
            - XMPP_SERVER=xmpp.{{ item.subdomain }}.{{ cloudflare_domain }}  # XMPP server on xmpp.subdomain.cloudflare_domain
            - PUBLIC_URL=https://{{ item.subdomain }}.{{ cloudflare_domain }}  # Public URL for Jitsi
          networks:
            - app-suite
      networks:
        app-suite:
          driver: bridge
          external: true
  with_items: "{{ subdomains }}"
  when: item.service == "jitsi"

- name: Start Jitsi Meet using Docker Compose
  shell: |
    docker compose up -d
  args:
    chdir: /srv/jitsi-meet
