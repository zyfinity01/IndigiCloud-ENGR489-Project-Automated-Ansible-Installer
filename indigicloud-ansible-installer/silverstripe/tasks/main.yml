---
- name: Create directories for SilverStripe
  file:
    path: "/srv/silverstripe/{{ item }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0755"
  with_items:
    - silverstripedata
    - dbdata

- name: Create Dockerfile for SilverStripe
  copy:
    dest: /srv/silverstripe/Dockerfile
    content: |
      FROM brettt89/silverstripe-web:8.1-apache
      ENV DOCUMENT_ROOT /var/www/html/public
      COPY . $DOCUMENT_ROOT
      WORKDIR $DOCUMENT_ROOT

- name: Create Docker Compose file for SilverStripe
  copy:
    dest: /srv/silverstripe/docker-compose.yml
    content: |
      version: "3.8"
      services:
        silverstripe:
          image: brettt89/silverstripe-web:8.1-apache
          container_name: silverstripe
          volumes:
            - /srv/silverstripe/silverstripedata:/var/www/html
          depends_on:
            - silverstripe_db
          environment:
            - DOCUMENT_ROOT=/var/www/html/public
            - SS_TRUSTED_PROXY_IPS=*
            - SS_ENVIRONMENT_TYPE=dev
            - SS_DATABASE_SERVER=silverstripe_db
            - SS_DATABASE_NAME={{ silverstripe_db_name }}
            - SS_DATABASE_USERNAME={{ silverstripe_db_user }}
            - SS_DATABASE_PASSWORD={{ silverstripe_db_password }}
            - SS_DEFAULT_ADMIN_USERNAME={{ silverstripe_admin_user }}
            - SS_DEFAULT_ADMIN_PASSWORD={{ silverstripe_admin_password }}
            - VIRTUAL_HOST={{ item.subdomain }}.{{ cloudflare_domain }}  # Set the subdomain for NGINX proxy
            - VIRTUAL_PORT=80  # Port inside the SilverStripe container
            - LETSENCRYPT_HOST={{ item.subdomain }}.{{ cloudflare_domain }}  # Request a certificate for this subdomain
            - LETSENCRYPT_EMAIL={{ certbot_email }}
          ports:
            - "{{ item.port }}:80"  # Expose the internal port 80 to the host
          networks:
            - app-suite
          restart: always

        silverstripe_db:
          image: mysql:5.7
          container_name: silverstripe_db
          environment:
            - MYSQL_ALLOW_EMPTY_PASSWORD=yes
          volumes:
            - /srv/silverstripe/dbdata:/var/lib/mysql
          networks:
            - app-suite
            
      networks:
        app-suite:
          driver: bridge
          external: true
  with_items: "{{ subdomains }}"
  when: item.service == "silverstripe"

- name: Build SilverStripe Docker image
  shell: |
    docker compose build
  args:
    chdir: /srv/silverstripe

- name: Start SilverStripe using Docker Compose
  shell: |
    docker compose up --build -d
  args:
    chdir: /srv/silverstripe

- name: Set correct permissions for SilverStripe project inside the container
  shell: |
    docker exec silverstripe chown -R www-data:www-data /var/www

- name: Install Composer inside SilverStripe container
  shell: |
    docker exec silverstripe php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    docker exec silverstripe php -r "if (hash_file('sha384', 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    docker exec silverstripe php composer-setup.php
    docker exec silverstripe php -r "unlink('composer-setup.php');"
    docker exec silverstripe mv composer.phar /usr/local/bin/composer

- name: Check if SilverStripe is already installed
  shell: |
    docker exec silverstripe test -d /var/www/html/vendor/silverstripe
  register: silverstripe_installed
  ignore_errors: true
  changed_when: false
  failed_when: false

- name: Notify user if SilverStripe is not installed
  debug:
    msg: "Existing SilverStripe installation not found, installing now..."
  when: silverstripe_installed.rc != 0

- name: Install SilverStripe project inside the container
  shell: |
    docker exec silverstripe composer create-project silverstripe/installer .
  when: silverstripe_installed.rc != 0

- name: Set correct permissions for SilverStripe project after installation
  shell: |
    docker exec silverstripe chown -R www-data:www-data /var/www
